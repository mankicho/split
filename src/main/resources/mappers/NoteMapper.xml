<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="component.note.NoteMapper">

    <resultMap id="noteVO" type="component.note.NoteVO">
        <result property="noteId" column="note_id"/>
        <result property="noteUUID" column="note_uuid"/>
        <result property="fromEmail" column="from_email"/>
        <result property="toEmail" column="to_email"/>
        <result property="content" column="content"/>
        <result property="noteTime" column="note_time"/>
    </resultMap>

    <select id="getUUID" parameterType="string" resultType="string">
        select notebox_uuid from members_notebox where (to_email =#{toEmail} and from_email = #{fromEmail})
        or (to_email = #{fromEmail} and from_email = #{toEmail}) group by notebox_uuid
    </select>

    <insert id="createNoteBox" parameterType="string">
        INSERT INTO members_notebox(to_email,from_email,notebox_uuid) values(#{toEmail},#{fromEmail},#{uuid}),(#{fromEmail},#{toEmail},#{uuid})
    </insert>

    <select id="getNotes" parameterType="string" resultMap="noteVO">
        SELECT * from notebox where (to_email = #{toEmail} or from_email = #{toEmail}) group by note_uuid
    </select>

    <select id="getAllNotes" parameterType="string" resultMap="noteVO">
        SELECT n.*from notebox as n left outer join (select * from members_notebox group by notebox_uuid) as m on n.note_uuid = m.notebox_uuid
        and m.from_email = #{fromEmail}
        where n.note_uuid = #{uuid} and n.note_id > ifnull(m.delete_note_id,0);
    </select>

    <insert id="saveNote" parameterType="NoteDTO">
        INSERT INTO notebox(note_uuid,from_email,to_email,content) values (#{noteUUID},#{fromEmail},#{toEmail},#{content})
    </insert>
</mapper>

