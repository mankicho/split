<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="component.home.HomeDataMapper">

    <resultMap id="homeDataMyInfo" type="component.home.vo.HomeDataMyInfo">
        <result property="memberEmail" column="member_email"/>
        <result property="myAttNum" column="my_att_num"/>
        <result property="myPoint" column="my_point"/>
        <result property="allAttNum" column="all_att_num"/>
        <result property="attImage" column="att_image"/>
        <result property="dust" column="dust"/>
    </resultMap>

    <resultMap id="homeExplorerVO" type="component.home.vo.HomeExplorerVO">
        <result property="memberEmail" column="member_email"/>
        <result property="schoolId" column="school_id"/>
        <result property="classId" column="class_id"/>
        <result property="cnt" column="cnt"/>
        <result property="setPaymentAmount" column="set_payment_amount"/>
        <result property="attNum" column="att_num"/>
        <result property="schoolType" column="school_type"/>
        <result property="schoolName" column="school_name"/>
        <result property="authTime" column="auth_time"/>
        <result property="mySumPoint" column="my_sum_point"/>

    </resultMap>

    <resultMap id="homeData" type="component.home.response.HomeData">
        <result property="memberEmail" column="member_email"/>
        <collection property="homeDataMyInfo" resultMap="homeDataMyInfo"/>
        <collection property="homeExplorerVOS" resultMap="homeExplorerVO"/>
    </resultMap>

    <resultMap id="homeTicketVO" type="component.home.vo.HomeTicketVO">
        <result property="schoolType" column="school_type"/>
        <result property="schoolName" column="school_name"/>
        <result property="cnt" column="cnt"/>
        <result property="allNum" column="all_num"/>
        <result property="authTime" column="auth_time"/>
        <result property="dust" column="dust"/>
        <result property="myPaymentAmount" column="my_payment_amount"/>
        <result property="allPaymentAmount" column="all_payment_amount"/>
        <result property="myPoint" column="my_point"/>
        <result property="mannerTime" column="manner_time"/>
        <result property="setPaymentAmount" column="set_payment_amount"/>
        <result property="predictReward" column="predict_reward"/>
    </resultMap>

    <select id="selectPlanAuthLogsOfToday" resultType="int">
        SELECT COUNT(*) from plan_auth_log where date_format(authenticate_time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d')
    </select>

    <select id="selectPlanAuthLogsFor30MinutesOfSuccessUsers" parameterType="string" resultType="int">
        SELECT COUNT(*) from plan_auth_log where authenticatedtime between date_format(#{fromtime},'%Y-%m-%d %H:%i:%s')
        AND date_format(#{totime},'%Y-%m-%d %H:%i:%s')
    </select>


    <select id="selectUsersTotalCheckTime" parameterType="string" resultType="int"> <!-- 유저의 총 출석체크 회수 -->
        select count(*) from plan_auth_log where date_format(authenticate_time,'%Y-%m-%d') =
        date_format(now(),'%Y-%m-%d');
    </select>

    <select id="getHomeData" parameterType="HomeDataDTO" resultMap="homeData">
        select p.member_email,p.member_point,d.dust,if(d.dust>=70,'먼지뭉치','먼지') as dust_level,
        (select count(*) from class_auth_log where date_format(auth_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d')) as all_universe_num,
        my.my_att_check,if((select planet_name from planet where planet_code = card.set_location) is not null,'지정장소','자유장소') as set_location,
        card.image_path,card.my_need_total_check_num,card.school_name,card.school_type,card.school_id,card.class_id,card.set_payment_amount,
        card.my_total_check_num,card.today_reserved_person,ifnull(card.dummy_date,date_format(now(),'%Y-%m-%d')) as dummy_date ,ri.att_image
        from members_point as p
        left outer join members_dust as d on p.member_email = d.member_email
        left outer join
        (select member_email,count(*) as my_att_check from class_auth_log where member_email = #{memberEmail}) as my
        on my.member_email = p.member_email
        left outer join members_image as ri
        on p.member_email = ri.member_email
        left outer join
        (select s.school_id,s.school_type,s.school_name,s.set_location,s.image_path,c.member_email,c.class_id,c.cnt as my_need_total_check_num,
        c.set_payment_amount,l.my_total_check_num,tmp.today_reserved_person,dummy_date
        from school as s left outer join
        class_members as c -- 학교 데이터
        on s.school_id = c.school_id
        left outer join
        (select school_id,class_id,member_email,count(*) as my_total_check_num from class_auth_log group by school_id,class_Id,member_email) as l
        on c.member_email = l.member_email and c.school_id = l.school_id and c.class_id = l.class_id
        left outer join
        (select school_id,class_id,count(*) as today_reserved_person from class_members
        where (date_format(now(),'%Y-%m-%d') between start_date and end_date) and (set_day <![CDATA[&]]> #{weekday} != 0)
        group by school_id,class_id) as tmp -- 오늘 예약자
        on c.school_id = tmp.school_id and c.class_id = tmp.class_id
        left outer join
        (
        select school_id,class_id,dummy_date from class_members as c left outer join dummy_date as d on dummy_date
        between date_format(date_add(now(),interval 1 day),'%Y-%m-%d') and end_date
        where weekday <![CDATA[&]]> set_day != 0 group by school_id, class_id) as ttmp2 -- dummy_date
        on c.school_id = ttmp2.school_id and c.class_id = ttmp2.class_id
        where date_format(now(),'%Y-%m-%d') <![CDATA[<=]]> end_date and c.member_email = #{memberEmail}) as card
        on card.member_email = p.member_email where p.member_email = #{memberEmail};
    </select>

    <select id="getMyHomeInfo" parameterType="HomeDataDTO" resultMap="homeDataMyInfo">
        select att.member_email,ifnull(my_att_num,0) as my_att_num,
        ifnull(my_point,0) as my_point,ifnull(all_att_num,0) as all_att_num,i.att_image,d.dust From
        (select #{memberEmail} as member_email, ifnull(count(*),0) as my_att_num -- 내 출석횟수
        from class_auth_log where member_email = #{memberEmail}) as att
        left outer join
        (select member_email, sum(member_point) as my_point from members_point where member_email = #{memberEmail}) as po -- 내 상금
        on att.member_email = po.member_email
        left outer join
        (select #{memberEmail} as member_email, count(*) as all_att_num from class_auth_log -- 지금 3164명이 우주탐험중
        where date_format(auth_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d')) as al
        on att.member_email = al.member_email
        left outer join
        members_image as i -- 내 이미지
        on i.member_email = att.member_email
        left outer join
        members_dust as d -- 내 레벨 단계
        on att.member_email = d.member_email;
    </select>

    <select id="getMyHomeExplorers" parameterType="HomeDataDTO" resultMap="homeExplorerVO">
        select my.*,ifnull(log.att_num,0) as att_num ,s.school_type,concat(if(s.school_type=1,'[공식]',''),' ',s.school_name) as school_name,
        c.auth_time,my.set_payment_amount,dust.dust,ifnull(my_sum_point,0) as my_sum_point
        From
        (SELECT *
        FROM(SELECT member_email,school_id,class_id,start_date,cnt,set_payment_amount FROM
        (SELECT * FROM class_members WHERE (member_email = #{memberEmail}) AND (DATE_FORMAT(now(), '%Y-%m-%d') <![CDATA[<=]]> end_date)
        ORDER BY start_date) AS class_members
        GROUP BY school_id , class_id) AS my) as my -- 내 탐험단 리스트
        left outer join school as s
        on my.school_id = s.school_id -- 학교정보
        left outer join class as c
        on my.class_id = c.class_id -- 출석시간
        left outer join members_dust as dust
        on my.member_email = dust.member_email -- 더스트
        left outer join (select member_email,school_id,class_id,sum(member_point) as my_sum_point
        from members_point where member_email = #{memberEmail} group by school_id,class_id) as p
        on my.member_email = p.member_email and my.school_id = p.school_id and my.class_id = p.class_id -- 내 상금
        left outer join
        (select school_id,class_id,att_num from
        (select l.school_id,l.class_id,count(*) as att_num
        From class_auth_log as l left outer join
        (SELECT *
        FROM(SELECT school_id,class_id,start_date FROM
        (SELECT * FROM class_members
        WHERE (member_email = #{memberEmail}) AND (DATE_FORMAT(now(), '%Y-%m-%d') <![CDATA[<=]]> end_date) ORDER BY start_date)
        AS class_members
        GROUP BY school_id , class_id) AS my) as my
        on l.school_id=my.school_id and l.class_id =my.class_id
        where member_email = #{memberEmail} and date_format(auth_date,'%Y-%m-%d') <![CDATA[>=]]> start_date group by school_id,class_id) as log) as log
        on my.school_id = log.school_id and my.class_id = log.class_id;
    </select>

    <select id="getTicket" resultMap="homeTicketVO" parameterType="HomeTicketDTO">
        select s.school_type,s.school_name, m.cnt, l.all_num, c.auth_time,d.dust,(all_num*set_payment_amount) as my_payment_amount,(cnt*set_payment_amount) as all_payment_amount,
        po.my_point,pm.manner_time,set_payment_amount,
        round(get_predict_reward(#{memberEmail},#{weekday},date_format(now(),'%Y-%m-%d'),#{classId},
        get_n_person(#{weekday},date_format(now(),'%Y-%m-%d'),#{classId})) / 2 * set_payment_amount /
        (sum_amount-get_predict_reward(#{memberEmail},#{weekday},date_format(now(),'%Y-%m-%d'),#{classId},
        get_n_person(#{weekday},date_format(now(),'%Y-%m-%d'),#{classId})))) as predict_reward
        from class_members as m
        left outer join (select class_id,sum(set_payment_amount) as sum_amount from class_members
        where class_id= #{classId} and set_day <![CDATA[&]]> #{weekday} != 0 and date_format(now(),'%Y-%m-%d')
        between start_date and end_date) as sum_amount
        on m.class_id = sum_amount.class_id
        left outer join (select tid,count(*) as all_num from class_auth_log ) as l
        on m.tid = l.tid
        left outer join school as s
        on m.school_id = s.school_id
        left outer join class as c
        on m.class_id = c.class_id
        left outer join members_dust as d
        on m.member_email = d.member_email
        left outer join
        (select member_email,sum(member_point) as my_point from members_point where tid = #{tid}) as po
        on m.member_email = po.member_email
        left outer join planet as p
        on s.set_location = p.planet_code
        left outer join planet_manner_time as pm
        on p.planet_code = pm.planet_code
        where m.tid = #{tid};
    </select>
</mapper>

